services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    networks:
      - proxy-net
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/frontend
    working_dir: /frontend
    env_file:
      - .env

  backend:
    build:
      context: ./backend
    container_name: backend
    networks:
      - proxy-net
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/backend
    depends_on:
      - db
      - frontend

  trending-api:  
    build:
      context: ./trending-api       
    container_name: trending-api
    networks:
      - proxy-net
    restart: unless-stopped
    ports:
      - "5000:5000"                 
    volumes:
      - ./trending-api:/trending         
    command: ["python", "trending_api.py"]
    depends_on:
      - db
      - backend                    

  recommend-api:
    build:
      context: ./recommend_api
    container_name: recommend-api
    networks:
      - proxy-net
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./recommend_api:/recommend
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - PYTHONUNBUFFERED=1
    depends_on:
      - db

  db:
    image: mysql:8.0
    container_name: mysql_container
    networks:
      - proxy-net
    restart: always
    env_file:
      - ./recommend_api/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PWD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PWD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db:/backup 

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    labels:
      - com.github.nginx-proxy.nginx-proxy
    networks:
      - proxy-net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    environment:
      - ENABLE_DEFAULT_HOST=false

  nginx-letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-letsencrypt
    networks:
      - proxy-net
    depends_on:
      - nginx-proxy
    env_file:
      - .env
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
      - NGINX_PROXY_CONTAINER=nginx-proxy 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/acme:/etc/acme.sh


volumes:
  db_data:

networks:
  proxy-net:
    driver: bridge
